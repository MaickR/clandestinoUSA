# ------------------------------------------------------------
# .htaccess — Optimización y Caching Inteligente
# Proyecto: The Clandestino USA
# Fecha: 2025-09-16
# Requiere Apache con AllowOverride All en el VirtualHost/Directorio
# ------------------------------------------------------------

# Seguridad y saneamiento básico
Options -Indexes
ServerSignature Off
AddDefaultCharset utf-8
FileETag MTime Size

<IfModule mod_headers.c>
  # Seguridad ligera (no intrusiva)
  Header always set X-Content-Type-Options "nosniff"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  Header always set X-Frame-Options "SAMEORIGIN"

  # Variaciones por compresión/idioma/origen
  Header append Vary "Accept-Encoding"
  Header append Vary "Accept-Language"
</IfModule>

# HSTS (solo si TODO el sitio usa HTTPS). Descomenta cuando estés listo.
 <IfModule mod_headers.c>
  Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
 </IfModule>

# ------------------------------------------------------------
# Tipos MIME adicionales
# ------------------------------------------------------------
<IfModule mod_mime.c>
  AddType image/avif avif
  AddType image/webp webp
  AddType image/svg+xml svg svgz
  AddType application/json json map
  AddType application/manifest+json webmanifest
  AddType font/woff2 woff2
  AddType font/woff woff
  AddType application/vnd.ms-fontobject eot
  AddType font/ttf ttf
  AddType font/otf otf
  AddEncoding gzip svgz
</IfModule>

# CORS para fuentes y manifiesto (útil si se usan cross-origin)
<IfModule mod_headers.c>
  <FilesMatch "\.(?:ttf|ttc|otf|eot|woff|woff2|svg|webmanifest)$">
    Header always set Access-Control-Allow-Origin "*"
  </FilesMatch>
</IfModule>

# ------------------------------------------------------------
# Compresión
# Nota: cPanel ya gestiona la compresión (Gzip/Brotli) a nivel servidor.
#       Eliminamos directivas locales para máxima compatibilidad.
# ------------------------------------------------------------

# ------------------------------------------------------------
# Caching inteligente con Expires + Cache-Control
# ------------------------------------------------------------
<IfModule mod_expires.c>
  ExpiresActive On

  # HTML debe ser fresco (evitar cacheo agresivo)
  ExpiresByType text/html "access plus 0 seconds"

  # Datos
  ExpiresByType application/json "access plus 1 hour"
  ExpiresByType application/xml  "access plus 1 hour"
  ExpiresByType text/xml         "access plus 1 hour"
  ExpiresByType application/manifest+json "access plus 1 day"

  # CSS/JS (nombres no versionados -> TTL moderado)
  ExpiresByType text/css              "access plus 7 days"
  ExpiresByType text/javascript       "access plus 7 days"
  ExpiresByType application/javascript "access plus 7 days"

  # Imágenes
  ExpiresByType image/avif     "access plus 6 months"
  ExpiresByType image/webp     "access plus 6 months"
  ExpiresByType image/jpeg     "access plus 6 months"
  ExpiresByType image/png      "access plus 6 months"
  ExpiresByType image/gif      "access plus 6 months"
  ExpiresByType image/svg+xml  "access plus 6 months"
  ExpiresByType image/x-icon   "access plus 1 year"

  # Fuentes
  ExpiresByType font/ttf  "access plus 6 months"
  ExpiresByType font/otf  "access plus 6 months"
  ExpiresByType font/woff "access plus 6 months"
  ExpiresByType font/woff2 "access plus 6 months"
  ExpiresByType application/vnd.ms-fontobject "access plus 6 months"
</IfModule>

<IfModule mod_headers.c>
  # HTML & PHP: sin caché
  <FilesMatch "\.(?:html|php)$">
    Header always set Cache-Control "no-cache, no-store, must-revalidate, max-age=0"
    Header always set Pragma "no-cache"
  </FilesMatch>

  # Service Worker: no-cache absoluto (para updates fiables)
  <Files "sw.js">
    Header always set Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0"
  </Files>

  # Sitemap y robots: caché corta
  <FilesMatch "^(?:sitemap\.xml|robots\.txt)$">
    Header always set Cache-Control "public, max-age=3600, stale-while-revalidate=86400"
  </FilesMatch>

  # Manifiesto Web
  <FilesMatch "\.(?:webmanifest|manifest)$">
    Header always set Cache-Control "public, max-age=86400, must-revalidate"
  </FilesMatch>

  # JSON/XML genérico
  <FilesMatch "\.(?:json|xml)$">
    Header set Cache-Control "public, max-age=3600, must-revalidate"
  </FilesMatch>

  # CSS/JS (nombres no versionados -> 7 días)
  <FilesMatch "\.(?:css|js)$">
    Header set Cache-Control "public, max-age=604800, must-revalidate"
  </FilesMatch>

  # Imágenes
  <FilesMatch "\.(?:avif|webp|jpe?g|png|gif|svg|ico)$">
    Header set Cache-Control "public, max-age=15552000, stale-while-revalidate=86400"
  </FilesMatch>

  # Fuentes (suelen ser inmutables)
  <FilesMatch "\.(?:woff2?|ttf|otf|eot)$">
    Header set Cache-Control "public, max-age=15552000, immutable"
  </FilesMatch>
</IfModule>

# ------------------------------------------------------------
# Redirección a HTTPS — activo (el sitio ya cuenta con SSL)
# Condiciones a prueba de proxies/CDN para evitar bucles
# ------------------------------------------------------------
<IfModule mod_rewrite.c>
  RewriteEngine On
  # Si NO es HTTPS en el backend Y el proxy no indica HTTPS, entonces redirige
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP:X-Forwarded-Proto} !https
  RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
  
  # Opcional: fuerza barra final en directorios (descomenta si la necesitas)
  # RewriteCond %{REQUEST_FILENAME} -d
  # RewriteRule ^(.+[^/])$ https://%{HTTP_HOST}/$1/ [L,R=301]
</IfModule>

# ------------------------------------------------------------
# (Opcional) Content Security Policy — puede romper scripts inline.
# Ajusta fuentes y descomenta cuando esté validado.
# ------------------------------------------------------------
# <IfModule mod_headers.c>
#   Header always set Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self'; upgrade-insecure-requests"
# </IfModule>

# Fin de .htaccess
